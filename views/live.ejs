<div class="liveMainBox">
    <div class="liveVideoBox">
        <div class="VideoBox">
            <div class="videoSection">
                <video id="video" autoplay width="100%" height="777px" controls></video>
            </div>
            <!-- <div class="videoSetting">
                <div class="setting1">
                    <div class="play">
                        <img src="/imgs/play-button-arrowhead.png" />
                    </div>
                    <div class="stop" hidden>
                        <img src="/imgs/stop-button.png" />
                    </div>
                    <div class="volume"><img src="/imgs/speaker-volume.png" /></div>
                    <div class="liveSign">
                        <div>실시간</div>
                        <img src="/imgs/full-stop.png" />
                    </div>
                </div>
                <div class="setting2">
                    <div class="settingBtn">
                        <img src="/imgs/settings-cogwheel-button.png" />
                    </div>
                    <div class="wideBtn"><img src="/imgs/fullscreen.png" /></div>
                </div>
            </div> -->
        </div>
        <div class="liveStreamerInfo">
            <div class="liveTitle">
                <span> <%= channelLive.title %> </span>
                <span style="display: none" class="channelIdInLive"><%= channelLive.channelId %></span>
                <span style="display: none" class="liveIdInLive"><%= channelLive.live_id %></span>
            </div>
            <div class="streamerInfo">
                <div class="streamerInfoDetail">
                    <div class="streamerImg">
                        <img src="<%= channelLive.channelImage %>" />
                    </div>
                    <div class="streamerTextWrap">
                        <div class="streamerNickname"><span> <%= channelLive.channelName %> </span></div>
                        <div class="streamInfo">
                            <!-- <div>현재<span> 5,131 </span>시청중</div> -->
                            <div class="streamerDescription"><%= channelLive.description %></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="liveChatBox" id="liveChatBoxContainer">
        <div class="chatTitle">채팅</div>
        <div class="chatMain" id="chatBoxWrapStreaming">
            <div class="chatBox" id="chatBox">
                <div class="chatList" id="oneChat">
                    <div class="chatNickname" id="chatNickname"></div>
                    <div class="chatText" id="chatText"></div>
                </div>
            </div>
            <div class="chatInputWrap streamingChatInputWrap">
                <input type="text" id="chatInputStreamerPage" class="chatInputText" style="width: 80%; font-size: 20px; color: whitesmoke; border-radius: 10px" />
                <button class="sendChat" id="sendChat">전송</button>
            </div>
        </div>
    </div>
</div>
<img width="300px" height="300px" id="thumb" src="" alt="" />
<script defer src="/script/chat.js"></script>

<script defer>
    const channelId = document.querySelector('.channelIdInLive').textContent;
    const liveId = document.querySelector('.liveIdInLive').textContent;
    const thumb = document.getElementById('thumb');

    document.addEventListener('DOMContentLoaded', async () => {
        await axios
            .get(`/api/live/${liveId}`)
            .then(function (response) {
                console.log('response: ', response.data.channel.channelImage);

                const streamKey = response.data.channel.streamKey;
                //console.log('streamKey: ', streamKey);
                thumb.src = `${HLS_URL}/thumb/thumbnail_${streamKey}.png`;
                if (Hls.isSupported()) {
                    1;
                    const hls = new Hls({
                        debug: false,
                    });
                    console.log(`${HLS_URL}/thumb/thumbnail_${streamKey}.png`);
                    console.log(`${HLS_URL}/hls/${streamKey}/index.m3u8`);
                    hls.loadSource(`${HLS_URL}/hls/${streamKey}/index.m3u8`);
                    hls.attachMedia(video);
                    hls.on(Hls.Events.MEDIA_ATTACHED, function () {
                        video.muted = true;
                        video.play();
                    });
                }
            })
            .catch(function (error) {
                //console.log(error );
            });
    });
</script>
